apiVersion: v1
kind: Service
metadata:
  name: ef-kubernetes-app
  labels:
    app: ef-kubernetes-app
spec:
  selector:
    app: ef-kubernetes-app
  clusterIP: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ef-kubernetes-app
spec:
  selector:
    matchLabels:
      app: ef-kubernetes-app
  serviceName: "ef-kubernetes-app"
  replicas: 3
  template:
    metadata:
      labels:
        app: ef-kubernetes-app
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: ef-kubernetes-app
          image: docker/ef-kubernetes-app:1.0.0
          imagePullPolicy: Never
          #readinessProbe:
          #  tcpSocket:
          #    port: 8008
          #  initialDelaySeconds: 30
          #  periodSeconds: 10
          #livenessProbe:
          #  tcpSocket:
          #    port: 8008
          #  initialDelaySeconds: 15
          #  periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /healthcheck/v1/status
              port: 8008
              httpHeaders:
              - name: Authorization
                value: Basic dGliY286dGliY28=
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthcheck/v1/status
              port: 8008
              httpHeaders:
              - name: Authorization
                value: Basic dGliY286dGliY28=
            initialDelaySeconds: 30
            periodSeconds: 10
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 10.96.0.10
        searches:
          - ef-kubernetes-app.default.svc.cluster.local
        options:
          - name: ndots
            value: "5"
